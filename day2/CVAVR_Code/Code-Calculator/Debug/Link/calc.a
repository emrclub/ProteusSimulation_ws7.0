;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <mega8.h>
;#include <math.h>
;#define F_XTAL 12000000L
;
;#define E PORTC.0           //enable pin of LCD
;#define RS PORTC.1          //Register Select pin of LCD
;
;#define RowA PORTD.0        //to send the data to keypad
;#define RowB PORTD.1
;#define RowC PORTD.2
;#define RowD PORTD.3
;
;#define Col1 PIND.4        //to receive the data from keypad
;#define Col2 PIND.5
;#define Col3 PIND.6
;#define Col4 PIND.7
;
;void cmd(char a)
; 0000 0015 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0016     E=1;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;	a -> R17
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0017     RS=0;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0018     PORTB=a;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0019     delay_ms(5);
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001A     E=0;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001B     delay_ms(5);
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 001C }
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;
;void lcd1(char b)
; 0000 001F {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0020     E=1;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;	b -> R17
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0021     RS=1;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0022     PORTB =b;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0023     delay_ms(5);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0024     E=0;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0025     delay_ms(5);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0026 }
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;
;void string1(char *str)
; 0000 0029 {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 002A      while(*str!='\0')
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;	*str -> R16,R17
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 002B      {
; 0000 002C       lcd1(*str);
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002D       str++;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002E      }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002F }
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;
;void init_LCD()
; 0000 0032 {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0033 
; 0000 0034   cmd(0x38);        //LCD initialization
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0035   cmd(0x0c);        //display on cursor off
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0036   cmd(0x01);        //clear display screen
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0037   cmd(0x06);        //shift
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0038   cmd(0x02);        //return to home
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0039 }
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;
;void delay(int a)
; 0000 003C {
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003D   int i;
; 0000 003E   for(i=0;i<a;i++);
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;	a -> R18,R19
;	i -> R16,R17
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 003F }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;
;char READ_SWITCHES(void)
; 0000 0042 {
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0043     RowA = 0; RowB = 1; RowC = 1; RowD = 1;     //Test Row A
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0044     if (Col1 == 0) { delay_ms(10); while (Col1==0); return '7'; }
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0045     if (Col2 == 0) { delay_ms(10); while (Col2==0); return '8'; }
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0046     if (Col3 == 0) { delay_ms(10); while (Col3==0); return '9'; }
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0047     if (Col4 == 0) { delay_ms(10); while (Col4==0); return '/'; }
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0048 
; 0000 0049     RowA = 1; RowB = 0; RowC = 1; RowD = 1;     //Test Row B
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 004A     if (Col1 == 0) { delay_ms(10); while (Col1==0); return '4'; }
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 004B     if (Col2 == 0) { delay_ms(10); while (Col2==0); return '5'; }
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 004C     if (Col3 == 0) { delay_ms(10); while (Col3==0); return '6'; }
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 004D     if (Col4 == 0) { delay_ms(10); while (Col4==0); return 'x'; }
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
; 0000 004E 
; 0000 004F     RowA = 1; RowB = 1; RowC = 0; RowD = 1;     //Test Row C
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 0050     if (Col1 == 0) { delay_ms(10); while (Col1==0); return '1'; }
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0051     if (Col2 == 0) { delay_ms(10); while (Col2==0); return '2'; }
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 0052     if (Col3 == 0) { delay_ms(10); while (Col3==0); return '3'; }
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
; 0000 0053     if (Col4 == 0) { delay_ms(10); while (Col4==0); return '-'; }
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 0054 
; 0000 0055     RowA = 1; RowB = 1; RowC = 1; RowD = 0;     //Test Row D
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 0056     if (Col1 == 0) { delay_ms(10); while (Col1==0); return 'C'; }
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 0057     if (Col2 == 0) { delay_ms(10); while (Col2==0); return '0'; }
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
; 0000 0058     if (Col3 == 0) { delay_ms(10); while (Col3==0); return '='; }
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 0059     if (Col4 == 0) { delay_ms(10); while (Col4==0); return '+'; }
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 005A 
; 0000 005B     return 'n';               // Means no key has been pressed
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 005C }
;PCODE: $00000182 VOL: 0
;
;
;char get_key(void)           //get key from user
; 0000 0060 {
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 0061     char key = 'n';              //assume no key pressed
; 0000 0062 
; 0000 0063     while(key=='n')              //wait untill a key is pressed
;PCODE: $00000185 VOL: 0
;	key -> R17
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 0064     {
; 0000 0065       key = READ_SWITCHES();   //scan the keys again and again
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 0066     }
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 0067     return key;                  //when key pressed then return its value
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 0068 }
;PCODE: $00000193 VOL: 0
;
;
;
;
;char IsOperator(char ch)
; 0000 006E {
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 006F   if(ch == '*' || ch=='+' || ch=='/' || ch=='-')
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;	ch -> R17
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 0070     return 1;
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 0071   else
;PCODE: $000001A9 VOL: 0
; 0000 0072     return '\0';
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 0073 }
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;
;char IsDigit(char ch)
; 0000 0076 {
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 0077   if(ch<=48 && ch<=57)
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;	ch -> R17
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0078    return 1;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 0079   else
;PCODE: $000001C2 VOL: 0
; 0000 007A    return '\0';
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 007B }
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;
;char IsClear(char ch)
; 0000 007E {
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 007F   if(ch=='C')
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;	ch -> R17
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 0080    return 1;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
; 0000 0081   else
;PCODE: $000001D4 VOL: 0
; 0000 0082    return '\0';
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0083 }
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;
;void Calculate(int op1, int op2, char Operation)
; 0000 0086 {
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0087    int res;
; 0000 0088    char pos = 0xCE;
; 0000 0089    if(Operation == '+')
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;	op1 -> Y+8
;	op2 -> R20,R21
;	Operation -> R18
;	res -> R16,R17
;	pos -> R19
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 008A     res = op1+op2;
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 008B    else if(Operation == '-')
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 008C     res = op1-op2;
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
; 0000 008D    else if(Operation == '*')
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 008E     res = op1*op2;
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 008F    else if(Operation == '/')
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 0090     {
; 0000 0091       float res1 = (1.0)*(((1.0)*op1)/((1.0)*(op2)));
; 0000 0092       res = res1;
;PCODE: $00000201 VOL: 0
;	op1 -> Y+12
;	res1 -> Y+0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0093     }
;PCODE: $00000213 VOL: 0
; 0000 0094 
; 0000 0095    else return;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0096 
; 0000 0097    cmd(pos);
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0098 
; 0000 0099    if(res==0)
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 009A    {
; 0000 009B      lcd1('0');
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
; 0000 009C    }
; 0000 009D 
; 0000 009E    while(res!=0)
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 009F    {
; 0000 00A0      lcd1(res%10 + '0');
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 00A1      pos = pos - 1;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 00A2      res = res/10;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 00A3    }
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 00A4 }
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;
;void main()
; 0000 00A7 {
;PCODE: $00000239 VOL: 0
; 0000 00A8     char flag_op = 0;
; 0000 00A9     int op1=0, op2=0;
; 0000 00AA     int count=0;
; 0000 00AB     char Operator = 'n';
; 0000 00AC 
; 0000 00AD     DDRB=0xFF;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;	flag_op -> R17
;	op1 -> R18,R19
;	op2 -> R20,R21
;	count -> Y+0
;	Operator -> R16
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
; 0000 00AE     DDRD=0x0F;
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 00AF 
; 0000 00B0     init_LCD();
;PCODE: $0000024B VOL: 0
; 0000 00B1 
; 0000 00B2 /*cmd(0x83);
; 0000 00B3 string1("WELCOMWE TO");
; 0000 00B4 cmd(0xPORTD.7);
; 0000 00B5 string1("EMR CLUB");
; 0000 00B6 delay_ms(100);
; 0000 00B7 */
; 0000 00B8     cmd(0x01);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 00B9     cmd(0x80);
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 00BA     lcd1('3');
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 00BB     delay_ms(20);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 00BC     cmd(0x01);
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 00BD     cmd(0x80);
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 00BE /* while(1)
; 0000 00BF  {
; 0000 00C0   char ch = get_key();
; 0000 00C1     if(IsDigit(ch))
; 0000 00C2     {
; 0000 00C3         if(flag_op == 0)
; 0000 00C4         {
; 0000 00C5           op1 = pow(10,count)*op1 + (int)(ch);
; 0000 00C6           count = count + 1;
; 0000 00C7         }
; 0000 00C8         else
; 0000 00C9         {
; 0000 00CA           op2 = pow(10,count)*op2 + (int)(ch);
; 0000 00CB           count = count + 1;
; 0000 00CC         }
; 0000 00CD     }
; 0000 00CE     else if(IsOperator(ch))
; 0000 00CF     {
; 0000 00D0        if(flag_op==1) continue;
; 0000 00D1 
; 0000 00D2        count=0;
; 0000 00D3        Operator = ch;
; 0000 00D4        flag_op = 1;
; 0000 00D5     }
; 0000 00D6     else if(IsClear(ch))
; 0000 00D7     {
; 0000 00D8       flag_op = 0;
; 0000 00D9       cmd(0x01);
; 0000 00DA       Operator = 'n';
; 0000 00DB     }
; 0000 00DC     else if(Operator!='n' && ch=='C' && flag_op==1)
; 0000 00DD     {
; 0000 00DE       Calculate(op1, op2, Operator);
; 0000 00DF     }
; 0000 00E0  }*/
; 0000 00E1   while(1)
;PCODE: $00000259 VOL: 0
; 0000 00E2   {
; 0000 00E3     char ch = get_key();
; 0000 00E4     lcd1(ch);
;PCODE: $0000025A VOL: 0
;	count -> Y+1
;	ch -> Y+0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
; 0000 00E5     delay_ms(100);
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 00E6     cmd(0x01);
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 00E7   }
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
; 0000 00E8 
; 0000 00E9 }
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;
